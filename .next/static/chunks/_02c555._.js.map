{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/delete-post.ts"],"sourcesContent":["import { client } from 'lib/client'\n\nexport const deletePost = async (postId: string, token: string) => {\n  try {\n    const response = await client.delete(`/posts/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    return { data: response.data }\n  } catch (error: any) {\n    return { error: error.response?.data?.message || 'Error deleting post' }\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,aAAa,OAAO,QAAgB;IAC/C,IAAI;QACF,MAAM,WAAW,MAAM,gHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE;YACvD,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;YAClC;QACF;QACA,OAAO;YAAE,MAAM,SAAS,IAAI;QAAC;IAC/B,EAAE,OAAO,OAAY;QACnB,OAAO;YAAE,OAAO,MAAM,QAAQ,EAAE,MAAM,WAAW;QAAsB;IACzE;AACF"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/get-post.ts"],"sourcesContent":["'use server'\n\nimport { client } from 'lib/client'\nimport { ServerActionResponse } from 'lib/error-handling'\n\nexport const getPost = async (id: string): Promise<ServerActionResponse> => {\n  if (!id) {\n    return { error: 'Post ID is required' }\n  }\n\n  try {\n    console.log('Server Action: Fetching post with ID:', id)\n    const response = await client.get(`/posts/${id}`)\n    console.log('Server Action: API response:', response.data) // Debug log\n    return { data: response.data }\n  } catch (error) {\n    console.error('Server Action: Error:', error)\n    return {\n      error: error instanceof Error ? error.message : 'Failed to fetch post',\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;IAKa"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/error-handling.ts"],"sourcesContent":["// lib/error-handling.ts\nimport { isAxiosError } from 'axios'\nimport { isRedirectError } from 'next/dist/client/components/redirect'\nimport { toast } from 'sonner'\n\nexport type ServerActionResponse<T = any> =\n  | { data: T; error?: never } // Success with data\n  | { token: string; user: T; error?: never } // Success with token and user\n  | { data?: never; error: string } // Error case\n\nexport const handleServerActionError = <T>(\n  response: ServerActionResponse<T>,\n): T => {\n  if ('error' in response) {\n    throw new Error(response.error)\n  }\n  if ('token' in response) {\n    return response.token as unknown as T\n  }\n  return response.data\n}\n\n// Handle Axios errors\nexport const handleAxiosError = (\n  error: unknown,\n): ServerActionResponse<never> => {\n  const defaultErrorMessage = 'something went wrong'\n\n  if (!isAxiosError(error)) {\n    console.error(error)\n    return { error: defaultErrorMessage }\n  }\n\n  return { error: error.response?.data.message || defaultErrorMessage }\n}\n\n// Toast error messages\nexport const toastServerError = (error: Error) => {\n  if (!isRedirectError(error)) {\n    toast.error(error.message)\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;;AAExB;AACA;AAFA;;;;AASO,MAAM,0BAA0B,CACrC;IAEA,IAAI,WAAW,UAAU;QACvB,MAAM,IAAI,MAAM,SAAS,KAAK;IAChC;IACA,IAAI,WAAW,UAAU;QACvB,OAAO,SAAS,KAAK;IACvB;IACA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,mBAAmB,CAC9B;IAEA,MAAM,sBAAsB;IAE5B,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;QACxB,QAAQ,KAAK,CAAC;QACd,OAAO;YAAE,OAAO;QAAoB;IACtC;IAEA,OAAO;QAAE,OAAO,MAAM,QAAQ,EAAE,KAAK,WAAW;IAAoB;AACtE;AAGO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ;QAC3B,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;IAC3B;AACF"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/posts/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport { deletePost } from 'actions/delete-post'\nimport { getPost } from 'actions/get-post'\nimport { updatePost } from 'actions/update-post' // Added missing import\nimport { useAuthentication } from 'hooks/useAuthentification'\nimport { handleServerActionError } from 'lib/error-handling'\nimport { useParams, useRouter } from 'next/navigation'\nimport { useEffect, useState } from 'react'\nimport HashLoader from 'react-spinners/HashLoader'\nimport { toast } from 'sonner'\nimport Swal from 'sweetalert2'\n\ninterface Post {\n  _id: string\n  title: string\n  content: string\n  author: {\n    _id: string | undefined\n    username: string\n  }\n  comments: Array<{\n    content: string\n    author: {\n      _id: string\n      username: string\n    }\n  }>\n  createdAt: string\n}\n\nconst PostPage = () => {\n  const params = useParams()\n  const router = useRouter()\n  const { user } = useAuthentication()\n  const postId = params.id as string\n\n  const [isEditing, setIsEditing] = useState(false)\n  const [editedTitle, setEditedTitle] = useState('')\n  const [editedContent, setEditedContent] = useState('')\n\n  if (!postId) {\n    return <div>Invalid post ID</div>\n  }\n\n  const {\n    mutate,\n    data: post,\n    isPending,\n    error,\n  } = useMutation({\n    mutationFn: async () => {\n      if (!postId) throw new Error('Post ID is required')\n      console.log('Fetching post with ID:', postId)\n      const result = await getPost(postId)\n      return handleServerActionError(result) as Post\n    },\n    onError: (error) => {\n      console.error('Error fetching post:', error)\n    },\n    onSuccess: (data) => {\n      console.log('Successfully fetched post:', data)\n    },\n  })\n\n  // Delete post mutation\n  const { mutate: handleDelete, isPending: isDeleting } = useMutation({\n    mutationFn: async () => {\n      const token = localStorage.getItem('token')\n      if (!token) throw new Error('Not authenticated')\n\n      await new Promise((resolve) => setTimeout(resolve, 1000)) // Optional delay\n      return deletePost(postId, token)\n    },\n    onSuccess: () => {\n      router.push('/') // Redirect to home page after deletion\n    },\n    onError: (error: Error) => {\n      toast.error(error.message)\n    },\n  })\n\n  // Add update post mutation\n  const { mutate: handleUpdate, isPending: isUpdating } = useMutation({\n    mutationFn: async () => {\n      const token = localStorage.getItem('token')\n      if (!token) throw new Error('Not authenticated')\n\n      return updatePost(postId, token, {\n        title: editedTitle,\n        content: editedContent,\n      })\n    },\n    onSuccess: () => {\n      setIsEditing(false)\n      mutate() // Refetch the post to get updated data\n      toast.success('Post updated successfully')\n    },\n    onError: (error: Error) => {\n      toast.error(error.message)\n    },\n  })\n\n  // Initialize edit form when post data is available\n  useEffect(() => {\n    if (post) {\n      setEditedTitle(post.title)\n      setEditedContent(post.content)\n    }\n  }, [post])\n\n  useEffect(() => {\n    if (postId) {\n      mutate()\n    }\n  }, [mutate, postId])\n\n  if (isPending) {\n    return (\n      <div className='flex items-center justify-center p-4'>\n        <HashLoader size={30} color='#3B82F6' />\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className='flex items-center justify-center p-4'>\n        <div className='text-red-500'>\n          Error loading post:{' '}\n          {error instanceof Error ? error.message : 'Unknown error'}\n        </div>\n      </div>\n    )\n  }\n\n  if (!post) {\n    return (\n      <div className='flex items-center justify-center p-4'>\n        <div className='text-lg'>Post not found</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className='mx-auto max-w-4xl p-4'>\n      <article>\n        {isEditing ? (\n          <div className='space-y-4'>\n            <input\n              type='text'\n              value={editedTitle}\n              onChange={(e) => setEditedTitle(e.target.value)}\n              className='w-full rounded border p-2'\n            />\n            <textarea\n              value={editedContent}\n              onChange={(e) => setEditedContent(e.target.value)}\n              className='min-h-[200px] w-full rounded border p-2'\n            />\n            <div className='space-x-2'>\n              <button\n                onClick={() => {\n                  Swal.fire({\n                    title: 'Confirm update',\n                    text: 'Are you sure you want to update this post?',\n                    icon: 'question',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'Yes, update it!',\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      handleUpdate()\n                    }\n                  })\n                }}\n                disabled={isUpdating}\n                className='rounded bg-blue-500 px-4 py-2 text-white'\n              >\n                {isUpdating ? (\n                  <div className='flex items-center gap-2'>\n                    <HashLoader size={20} color='#ffffff' />\n                    <span>Updating...</span>\n                  </div>\n                ) : (\n                  'Save Changes'\n                )}\n              </button>\n              <button\n                onClick={() => setIsEditing(false)}\n                className='rounded bg-gray-500 px-4 py-2 text-white'\n                disabled={isUpdating}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        ) : (\n          <>\n            <h1 className='text-3xl font-bold'>{post.title}</h1>\n            <div className='mt-2 text-gray-500'>\n              Posted by {post.author.username}\n            </div>\n            <div className='prose mt-6'>{post.content}</div>\n\n            {/* Action buttons - only shown if user is the author */}\n            {user?.id === post.author._id && (\n              <div className='space-x-2 py-2'>\n                <button\n                  onClick={() => setIsEditing(true)}\n                  className='rounded bg-blue-500 px-4 py-2 text-white'\n                >\n                  Edit Post\n                </button>\n                <button\n                  onClick={() => {\n                    Swal.fire({\n                      title: 'Are you sure?',\n                      text: \"You won't be able to revert this!\",\n                      icon: 'warning',\n                      showCancelButton: true,\n                      confirmButtonColor: '#3085d6',\n                      cancelButtonColor: '#d33',\n                      confirmButtonText: 'Yes, delete it!',\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        handleDelete()\n                        Swal.fire(\n                          'Deleted!',\n                          'Your post has been deleted.',\n                          'success',\n                        )\n                      }\n                    })\n                  }}\n                  className='button-danger rounded-md'\n                  disabled={isDeleting}\n                >\n                  {isDeleting ? (\n                    <div className='flex items-center gap-2'>\n                      <HashLoader size={20} color='#ffffff' />\n                      <span>Deleting...</span>\n                    </div>\n                  ) : (\n                    'Delete Post'\n                  )}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Comments section */}\n        <div className='mt-8'>\n          <h2 className='text-2xl font-bold'>Comments</h2>\n          <div className='mt-4 space-y-4'>\n            {post.comments.map((comment, index) => (\n              <div key={index} className='rounded border p-4'>\n                <p>{comment.content}</p>\n                <div className='mt-2 text-sm text-gray-500'>\n                  By {comment.author.username}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </article>\n    </div>\n  )\n}\n\nexport default PostPage\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}