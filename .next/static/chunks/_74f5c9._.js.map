{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/providers.tsx"],"sourcesContent":["'use client'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\n\nconst queryClient = new QueryClient()\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AADA;;;AAGA,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW;AAE5B,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C;KAJgB"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' },\n})\n\n// client.interceptors.response.use(\n//   (response) => {\n//     console.log('API Response:', response)\n//     return response\n//   },\n//   (error) => {\n//     console.error('API Error:', error)\n//     return Promise.reject(error)\n//   },\n// )\n"],"names":[],"mappings":";;;AAAA;AAGW;;AADJ,MAAM,SAAS,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,iBAAiB;IACjB,SAAS;QAAE,gBAAgB;IAAmB;AAChD,GAEA,oCAAoC;CACpC,oBAAoB;CACpB,6CAA6C;CAC7C,sBAAsB;CACtB,OAAO;CACP,iBAAiB;CACjB,yCAAyC;CACzC,mCAAmC;CACnC,OAAO;CACP,IAAI"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/context/AuthContext.tsx"],"sourcesContent":["'use client'\nimport {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from 'react'\nimport { useRouter } from 'next/navigation'\nimport { client } from 'lib/client'\n\ninterface User {\n  id: string\n  username: string\n}\n\ninterface AuthContextType {\n  user: User | null\n  isAuthenticated: boolean\n  logout: () => Promise<void>\n}\n\nexport const AuthContext = createContext<AuthContextType>({\n  user: null,\n  isAuthenticated: false,\n  logout: async () => {},\n})\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const router = useRouter()\n\n  useEffect(() => {\n    // Check authentication status when component mounts\n    checkAuth()\n  }, [])\n\n  const checkAuth = async () => {\n    try {\n      const response = await client.get('/auth/me')\n      if (response.data) {\n        setUser(response.data)\n        setIsAuthenticated(true)\n      }\n    } catch (error) {\n      setUser(null)\n      setIsAuthenticated(false)\n    }\n  }\n\n  const logout = async () => {\n    try {\n      await client.post('/auth/logout')\n      setUser(null)\n      setIsAuthenticated(false)\n      router.push('/auth/login')\n    } catch (error) {\n      console.error('Logout error:', error)\n    }\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, logout }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n"],"names":[],"mappings":";;;;;AACA;AAOA;AACA;;;AATA;;;;AAsBO,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmB;IACxD,MAAM;IACN,iBAAiB;IACjB,QAAQ,WAAa;AACvB;AAEO,SAAS,aAAa,EAAE,QAAQ,EAA2B;;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,oDAAoD;YACpD;QACF;iCAAG,EAAE;IAEL,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,WAAW,MAAM,gHAAA,CAAA,SAAM,CAAC,GAAG,CAAC;YAClC,IAAI,SAAS,IAAI,EAAE;gBACjB,QAAQ,SAAS,IAAI;gBACrB,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ;YACR,mBAAmB;QACrB;IACF;IAEA,MAAM,SAAS;QACb,IAAI;YACF,MAAM,gHAAA,CAAA,SAAM,CAAC,IAAI,CAAC;YAClB,QAAQ;YACR,mBAAmB;YACnB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;QACjC;IACF;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAiB;QAAO;kBAC1D;;;;;;AAGP;GAvCgB;;QAGC,qIAAA,CAAA,YAAS;;;KAHV"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}