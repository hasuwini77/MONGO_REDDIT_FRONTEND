{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/providers/query-client-provider.tsx"],"sourcesContent":["'use client'\n\nimport {\n  QueryClient,\n  QueryClientProvider as OriginalQueryClientProvider,\n} from '@tanstack/react-query'\nimport type { ReactNode } from 'react'\n\nconst makeQueryClient = () => {\n  return new QueryClient()\n}\n\nlet browserQueryClient: QueryClient | undefined = undefined\n\nexport const getQueryClient = () => {\n  if (typeof window === 'undefined') {\n    // Server: always make a new query client\n    return makeQueryClient()\n  } else {\n    // Browser: make a new query client if we don't already have one\n    // This is very important so we don't re-make a new client if React\n    // suspends during the initial render. This may not be needed if we\n    // have a suspense boundary BELOW the creation of the query client\n    if (!browserQueryClient) browserQueryClient = makeQueryClient()\n    return browserQueryClient\n  }\n}\n\nexport const QueryClientProvider = ({ children }: { children: ReactNode }) => {\n  // NOTE: Avoid useState when initializing the query client if you don't\n  //       have a suspense boundary between this and the code that may\n  //       suspend because React will throw away the client on the initial\n  //       render if it suspends and there is no boundary\n  const queryClient = getQueryClient()\n\n  return (\n    <OriginalQueryClientProvider client={queryClient}>\n      {children}\n    </OriginalQueryClientProvider>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAFA;;;AAQA,MAAM,kBAAkB;IACtB,OAAO,IAAI,gLAAA,CAAA,cAAW;AACxB;AAEA,IAAI,qBAA8C;AAE3C,MAAM,iBAAiB;IAC5B,uCAAmC;;IAGnC,OAAO;QACL,gEAAgE;QAChE,mEAAmE;QACnE,mEAAmE;QACnE,kEAAkE;QAClE,IAAI,CAAC,oBAAoB,qBAAqB;QAC9C,OAAO;IACT;AACF;AAEO,MAAM,sBAAsB,CAAC,EAAE,QAAQ,EAA2B;IACvE,uEAAuE;IACvE,oEAAoE;IACpE,wEAAwE;IACxE,uDAAuD;IACvD,MAAM,cAAc;IAEpB,qBACE,6LAAC,yLAAA,CAAA,sBAA2B;QAAC,QAAQ;kBAClC;;;;;;AAGP;KAZa"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}