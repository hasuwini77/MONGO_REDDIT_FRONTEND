{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/log-in.ts"],"sourcesContent":["'use server'\n\nimport { client } from 'lib/client'\nimport { handleAxiosError, ServerActionResponse } from 'lib/error-handling'\nimport { logInSchema, LogInValues } from 'lib/schemas'\nimport { cookies } from 'next/headers'\n\nexport const logIn = async (\n  data: LogInValues,\n): Promise<ServerActionResponse> => {\n  const parsedData = logInSchema.parse(data)\n\n  try {\n    const response = await client.post('/auth/log-in', parsedData)\n\n    if (!response.data.token) {\n      return { error: 'Token missing from response' }\n    }\n\n    // Set the cookie\n    const cookieStore = await cookies()\n    cookieStore.set({\n      name: 'token',\n      value: response.data.token,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'lax',\n      path: '/',\n    })\n\n    // Return the token\n    return { token: response.data.token }\n  } catch (error) {\n    return handleAxiosError(error)\n  }\n}\n"],"names":[],"mappings":";;;;;IAOa"}},
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/schemas.ts"],"sourcesContent":["import { z } from 'zod'\n\nexport const signUpSchema = z.object({\n  username: z.string().min(2, 'username must be at least 2 characters'),\n  password: z.string().min(6, 'password must be at least 6 characters'),\n})\n\nexport type SignUpValues = z.infer<typeof signUpSchema>\n\nexport const logInSchema = z.object({\n  username: z.string().min(1, 'username is required'),\n  password: z.string().min(1, 'password is required'),\n})\n\nexport type LogInValues = z.infer<typeof logInSchema>\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/field-error.tsx"],"sourcesContent":["import { type FieldError as TFieldError } from 'react-hook-form'\n\nexport const FieldError = ({ error }: { error: TFieldError | undefined }) => {\n  if (!error) return null\n\n  return <span className='text-sm text-primary'>{error.message}</span>\n}\n"],"names":[],"mappings":";;;;;AAEO,MAAM,aAAa,CAAC,EAAE,KAAK,EAAsC;IACtE,IAAI,CAAC,OAAO,OAAO;IAEnB,qBAAO,6LAAC;QAAK,WAAU;kBAAwB,MAAM,OAAO;;;;;;AAC9D;KAJa"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' },\n})\n\n// client.interceptors.response.use(\n//   (response) => {\n//     console.log('API Response:', response)\n//     return response\n//   },\n//   (error) => {\n//     console.error('API Error:', error)\n//     return Promise.reject(error)\n//   },\n// )\n"],"names":[],"mappings":";;;AAAA;AAGW;;AADJ,MAAM,SAAS,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,iBAAiB;IACjB,SAAS;QAAE,gBAAgB;IAAmB;AAChD,GAEA,oCAAoC;CACpC,oBAAoB;CACpB,6CAA6C;CAC7C,sBAAsB;CACtB,OAAO;CACP,iBAAiB;CACjB,yCAAyC;CACzC,mCAAmC;CACnC,OAAO;CACP,IAAI"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/context/AuthContext.tsx"],"sourcesContent":["// hooks/useAuth.tsx or context/AuthContext.tsx\n'use client'\nimport {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from 'react'\nimport { useRouter } from 'next/navigation'\nimport { client } from 'lib/client'\n\ninterface User {\n  id: string\n  username: string\n}\n\ninterface AuthContextType {\n  user: User | null\n  isAuthenticated: boolean\n  login: (token: string) => Promise<void>\n  logout: () => Promise<void>\n}\n\nexport const AuthContext = createContext<AuthContextType>({\n  user: null,\n  isAuthenticated: false,\n  login: async () => {},\n  logout: async () => {},\n})\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const router = useRouter()\n\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token')\n      console.log('Checking token:', token) // Debug log\n\n      if (!token) {\n        setIsLoading(false)\n        return\n      }\n\n      client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n      const response = await client.get('/auth/me')\n      console.log('Auth check response:', response.data) // Debug log\n\n      if (response.data) {\n        setUser(response.data)\n        setIsAuthenticated(true)\n      }\n    } catch (error) {\n      console.error('CheckAuth error:', error)\n      setUser(null)\n      setIsAuthenticated(false)\n      localStorage.removeItem('token')\n      delete client.defaults.headers.common['Authorization']\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const login = async (token: string) => {\n    try {\n      console.log('Login called with token:', token) // Debug log\n\n      // Store token\n      localStorage.setItem('token', token)\n\n      // Set auth header\n      client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n      // Get user data\n      const response = await client.get('/auth/me')\n      console.log('Login user data:', response.data) // Debug log\n\n      setUser(response.data)\n      setIsAuthenticated(true)\n    } catch (error) {\n      console.error('Login error:', error)\n      localStorage.removeItem('token')\n      delete client.defaults.headers.common['Authorization']\n      throw error\n    }\n  }\n\n  const logout = async () => {\n    localStorage.removeItem('token')\n    delete client.defaults.headers.common['Authorization']\n    setUser(null)\n    setIsAuthenticated(false)\n    router.push('/auth/log-in')\n  }\n\n  useEffect(() => {\n    checkAuth()\n  }, [])\n\n  if (isLoading) {\n    return null // or a loading spinner\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext)\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;;AAE/C;AAOA;AACA;;;AATA;;;;AAuBO,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmB;IACxD,MAAM;IACN,iBAAiB;IACjB,OAAO,WAAa;IACpB,QAAQ,WAAa;AACvB;AAEO,SAAS,aAAa,EAAE,QAAQ,EAA2B;;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,QAAQ,GAAG,CAAC,mBAAmB,OAAO,YAAY;;YAElD,IAAI,CAAC,OAAO;gBACV,aAAa;gBACb;YACF;YAEA,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;YAEnE,MAAM,WAAW,MAAM,gHAAA,CAAA,SAAM,CAAC,GAAG,CAAC;YAClC,QAAQ,GAAG,CAAC,wBAAwB,SAAS,IAAI,EAAE,YAAY;;YAE/D,IAAI,SAAS,IAAI,EAAE;gBACjB,QAAQ,SAAS,IAAI;gBACrB,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oBAAoB;YAClC,QAAQ;YACR,mBAAmB;YACnB,aAAa,UAAU,CAAC;YACxB,OAAO,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;QACxD,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,QAAQ,OAAO;QACnB,IAAI;YACF,QAAQ,GAAG,CAAC,4BAA4B,OAAO,YAAY;;YAE3D,cAAc;YACd,aAAa,OAAO,CAAC,SAAS;YAE9B,kBAAkB;YAClB,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;YAEnE,gBAAgB;YAChB,MAAM,WAAW,MAAM,gHAAA,CAAA,SAAM,CAAC,GAAG,CAAC;YAClC,QAAQ,GAAG,CAAC,oBAAoB,SAAS,IAAI,EAAE,YAAY;;YAE3D,QAAQ,SAAS,IAAI;YACrB,mBAAmB;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,aAAa,UAAU,CAAC;YACxB,OAAO,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;YACtD,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,OAAO,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;QACtD,QAAQ;QACR,mBAAmB;QACnB,OAAO,IAAI,CAAC;IACd;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG,EAAE;IAEL,IAAI,WAAW;QACb,OAAO,KAAK,uBAAuB;;IACrC;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAiB;YAAO;QAAO;kBACjE;;;;;;AAGP;GAjFgB;;QAIC,qIAAA,CAAA,YAAS;;;KAJV;AAmFT,MAAM,UAAU;;IAAM,OAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAAW;IAAtC"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/hooks/useAuth.tsx"],"sourcesContent":["// hooks/useAuth.ts\nimport { useContext } from 'react'\nimport { AuthContext } from 'context/AuthContext'\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;AACnB;AACA;;;;AAEO,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,0HAAA,CAAA,cAAW;IACtC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/auth/log-in/form.tsx"],"sourcesContent":["'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useRouter } from 'next/navigation'\nimport { toast } from 'sonner'\n\nimport { logIn } from 'actions/log-in'\nimport { logInSchema, LogInValues } from 'lib/schemas'\nimport { FieldError } from 'components/field-error'\nimport { useAuth } from 'hooks/useAuth'\n\nexport const LogInForm = () => {\n  const { login } = useAuth()\n  const router = useRouter()\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: async (values: LogInValues) => {\n      const response = await logIn(values)\n      console.log('Login response:', response) // Debug log\n\n      if ('error' in response) {\n        throw new Error(response.error)\n      }\n\n      if ('token' in response) {\n        console.log('Token received:', response.token) // Debug log\n        await login(response.token)\n        toast.success('Logged in successfully')\n        router.push('/?login=success')\n      }\n    },\n    onError: (error: Error) => {\n      console.error('Login mutation error:', error) // Debug log\n      toast.error(error.message)\n    },\n  })\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LogInValues>({\n    resolver: zodResolver(logInSchema),\n  })\n\n  return (\n    <form\n      onSubmit={handleSubmit((values) => {\n        console.log('Form submitted with values:', values) // Debug log\n        mutate(values)\n      })}\n      className='flex w-full max-w-md flex-col gap-4'\n    >\n      <input\n        {...register('username')}\n        type='text'\n        placeholder='username'\n        className='input'\n      />\n      <FieldError error={errors.username} />\n      <input\n        {...register('password')}\n        type='password'\n        placeholder='password'\n        className='input'\n      />\n      <FieldError error={errors.password} />\n      <button type='submit' className='button-primary' disabled={isPending}>\n        {isPending ? 'logging in...' : 'log in'}\n      </button>\n    </form>\n  )\n}\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AATA;AACA;;;AAHA;;;;;;;;;;AAaO,MAAM,YAAY;;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,oHAAA,CAAA,UAAO,AAAD;IACxB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QACxC,UAAU;qCAAE,OAAO;gBACjB,MAAM,WAAW,MAAM,CAAA,GAAA,uHAAA,CAAA,QAAK,AAAD,EAAE;gBAC7B,QAAQ,GAAG,CAAC,mBAAmB,UAAU,YAAY;;gBAErD,IAAI,WAAW,UAAU;oBACvB,MAAM,IAAI,MAAM,SAAS,KAAK;gBAChC;gBAEA,IAAI,WAAW,UAAU;oBACvB,QAAQ,GAAG,CAAC,mBAAmB,SAAS,KAAK,EAAE,YAAY;;oBAC3D,MAAM,MAAM,SAAS,KAAK;oBAC1B,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;oBACd,OAAO,IAAI,CAAC;gBACd;YACF;;QACA,OAAO;qCAAE,CAAC;gBACR,QAAQ,KAAK,CAAC,yBAAyB,OAAO,YAAY;;gBAC1D,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;YAC3B;;IACF;IAEA,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAe;QACvB,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,iHAAA,CAAA,cAAW;IACnC;IAEA,qBACE,6LAAC;QACC,UAAU,aAAa,CAAC;YACtB,QAAQ,GAAG,CAAC,+BAA+B,QAAQ,YAAY;;YAC/D,OAAO;QACT;QACA,WAAU;;0BAEV,6LAAC;gBACE,GAAG,SAAS,WAAW;gBACxB,MAAK;gBACL,aAAY;gBACZ,WAAU;;;;;;0BAEZ,6LAAC,gIAAA,CAAA,aAAU;gBAAC,OAAO,OAAO,QAAQ;;;;;;0BAClC,6LAAC;gBACE,GAAG,SAAS,WAAW;gBACxB,MAAK;gBACL,aAAY;gBACZ,WAAU;;;;;;0BAEZ,6LAAC,gIAAA,CAAA,aAAU;gBAAC,OAAO,OAAO,QAAQ;;;;;;0BAClC,6LAAC;gBAAO,MAAK;gBAAS,WAAU;gBAAiB,UAAU;0BACxD,YAAY,kBAAkB;;;;;;;;;;;;AAIvC;GA7Da;;QACO,oHAAA,CAAA,UAAO;QACV,qIAAA,CAAA,YAAS;QAEM,iLAAA,CAAA,cAAW;QA0BrC,iKAAA,CAAA,UAAO;;;KA9BA"}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}