{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/log-in.ts"],"sourcesContent":["// actions/log-in.ts\n'use server'\n\nimport { client } from 'lib/client'\nimport { handleAxiosError, ServerActionResponse } from 'lib/error-handling'\nimport { logInSchema, LogInValues } from 'lib/schemas'\n\nexport const logIn = async (\n  data: LogInValues,\n): Promise<ServerActionResponse> => {\n  try {\n    const parsedData = logInSchema.parse(data)\n    const response = await client.post('/auth/log-in', parsedData)\n\n    // Check if we have both token and user in the response\n    if (!response.data.token || !response.data.user) {\n      return { error: 'Invalid response from server' }\n    }\n\n    return {\n      token: response.data.token,\n      user: response.data.user,\n    }\n  } catch (error) {\n    return handleAxiosError(error)\n  }\n}\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;;IAOP"}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/schemas.ts"],"sourcesContent":["import { z } from 'zod'\n\nexport const signUpSchema = z.object({\n  username: z.string().min(2, 'username must be at least 2 characters'),\n  password: z.string().min(6, 'password must be at least 6 characters'),\n})\n\nexport type SignUpValues = z.infer<typeof signUpSchema>\n\nexport const logInSchema = z.object({\n  username: z.string().min(1, 'username is required'),\n  password: z.string().min(1, 'password is required'),\n})\n\nexport type LogInValues = z.infer<typeof logInSchema>\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/field-error.tsx"],"sourcesContent":["import { type FieldError as TFieldError } from 'react-hook-form'\n\nexport const FieldError = ({ error }: { error: TFieldError | undefined }) => {\n  if (!error) return null\n\n  return <span className='text-sm text-primary'>{error.message}</span>\n}\n"],"names":[],"mappings":";;;;;AAEO,MAAM,aAAa,CAAC,EAAE,KAAK,EAAsC;IACtE,IAAI,CAAC,OAAO,OAAO;IAEnB,qBAAO,6LAAC;QAAK,WAAU;kBAAwB,MAAM,OAAO;;;;;;AAC9D;KAJa"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' },\n})\n\n// client.interceptors.response.use(\n//   (response) => {\n//     console.log('API Response:', response)\n//     return response\n//   },\n//   (error) => {\n//     console.error('API Error:', error)\n//     return Promise.reject(error)\n//   },\n// )\n"],"names":[],"mappings":";;;AAAA;AAGW;;AADJ,MAAM,SAAS,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,iBAAiB;IACjB,SAAS;QAAE,gBAAgB;IAAmB;AAChD,GAEA,oCAAoC;CACpC,oBAAoB;CACpB,6CAA6C;CAC7C,sBAAsB;CACtB,OAAO;CACP,iBAAiB;CACjB,yCAAyC;CACzC,mCAAmC;CACnC,OAAO;CACP,IAAI"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/hooks/useAuthentification.tsx"],"sourcesContent":["// hooks/useAuthentication.ts\n'use client'\n\nimport { useState, useEffect } from 'react'\nimport { client } from 'lib/client'\nimport { useRouter } from 'next/navigation'\n\ninterface User {\n  id: string\n  username: string\n}\n\nexport function useAuthentication() {\n  const [user, setUser] = useState<User | null>(null)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const router = useRouter()\n\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token')\n      if (!token) {\n        setIsLoading(false)\n        return\n      }\n\n      client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      const response = await client.get('/auth/me')\n\n      if (response.data) {\n        setUser(response.data)\n        setIsAuthenticated(true)\n      }\n    } catch (error) {\n      console.error('Auth check error:', error)\n      localStorage.removeItem('token')\n      delete client.defaults.headers.common['Authorization']\n      setUser(null)\n      setIsAuthenticated(false)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    checkAuth()\n  }, [])\n\n  const login = async (token: string) => {\n    localStorage.setItem('token', token)\n    client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    await checkAuth()\n  }\n\n  const logout = async () => {\n    localStorage.removeItem('token')\n    delete client.defaults.headers.common['Authorization']\n    setUser(null)\n    setIsAuthenticated(false)\n    router.push('/auth/log-in')\n  }\n\n  return {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n  }\n}\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAG7B;AACA;AACA;;AAJA;;;;AAWO,SAAS;;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACV,aAAa;gBACb;YACF;YAEA,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;YACnE,MAAM,WAAW,MAAM,gHAAA,CAAA,SAAM,CAAC,GAAG,CAAC;YAElC,IAAI,SAAS,IAAI,EAAE;gBACjB,QAAQ,SAAS,IAAI;gBACrB,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qBAAqB;YACnC,aAAa,UAAU,CAAC;YACxB,OAAO,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;YACtD,QAAQ;YACR,mBAAmB;QACrB,SAAU;YACR,aAAa;QACf;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR;QACF;sCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO;QACnB,aAAa,OAAO,CAAC,SAAS;QAC9B,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;QACnE,MAAM;IACR;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,OAAO,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;QACtD,QAAQ;QACR,mBAAmB;QACnB,OAAO,IAAI,CAAC;IACd;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;GAzDgB;;QAIC,qIAAA,CAAA,YAAS"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/header.tsx"],"sourcesContent":["'use client'\nimport Link from 'next/link'\nimport { useAuth } from 'hooks/useAuth'\nimport { useRouter } from 'next/navigation'\nimport { UserCircle } from 'lucide-react'\n\nexport const Header = () => {\n  const { isAuthenticated, user, logout } = useAuth()\n  const router = useRouter()\n\n  // Add debug log\n  console.log('Header render:', { isAuthenticated, user })\n\n  return (\n    <header className='flex h-16 w-full items-center justify-between gap-4 px-4 py-2 md:px-20'>\n      <Link href='/' className='text-2xl font-bold'>\n        reddit\n      </Link>\n\n      <div className='flex items-center gap-4'>\n        {isAuthenticated ? (\n          <>\n            <button\n              onClick={() => router.push('/create-post')}\n              className='button-primary'\n            >\n              Create Post\n            </button>\n\n            <div className='flex items-center gap-2'>\n              <div className='flex items-center gap-2'>\n                <UserCircle className='h-8 w-8' />\n                <span className='text-sm font-medium'>{user?.username}</span>\n              </div>\n\n              <button onClick={() => logout()} className='button-secondary'>\n                Log out\n              </button>\n            </div>\n          </>\n        ) : (\n          <Link href='/auth/log-in' className='button-primary'>\n            Log in\n          </Link>\n        )}\n      </div>\n    </header>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;AAJA;;;;;AAMO,MAAM,SAAS;;IACpB,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,oHAAA,CAAA,UAAO,AAAD;IAChD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,gBAAgB;IAChB,QAAQ,GAAG,CAAC,kBAAkB;QAAE;QAAiB;IAAK;IAEtD,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC,+HAAA,CAAA,UAAI;gBAAC,MAAK;gBAAI,WAAU;0BAAqB;;;;;;0BAI9C,6LAAC;gBAAI,WAAU;0BACZ,gCACC;;sCACE,6LAAC;4BACC,SAAS,IAAM,OAAO,IAAI,CAAC;4BAC3B,WAAU;sCACX;;;;;;sCAID,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,qNAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;sDACtB,6LAAC;4CAAK,WAAU;sDAAuB,MAAM;;;;;;;;;;;;8CAG/C,6LAAC;oCAAO,SAAS,IAAM;oCAAU,WAAU;8CAAmB;;;;;;;;;;;;;iDAMlE,6LAAC,+HAAA,CAAA,UAAI;oBAAC,MAAK;oBAAe,WAAU;8BAAiB;;;;;;;;;;;;;;;;;AAO/D;GA1Ca;;QAC+B,oHAAA,CAAA,UAAO;QAClC,qIAAA,CAAA,YAAS;;;KAFb"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/providers.tsx"],"sourcesContent":["'use client'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\n\nconst queryClient = new QueryClient()\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AADA;;;AAGA,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW;AAE5B,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C;KAJgB"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/context/AuthContext.tsx"],"sourcesContent":["// hooks/useAuth.tsx or context/AuthContext.tsx\n'use client'\nimport {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from 'react'\nimport { useRouter } from 'next/navigation'\nimport { client } from 'lib/client'\n\ninterface User {\n  id: string\n  username: string\n}\n\ninterface AuthContextType {\n  user: User | null\n  isAuthenticated: boolean\n  login: (token: string) => Promise<void>\n  logout: () => Promise<void>\n}\n\nexport const AuthContext = createContext<AuthContextType>({\n  user: null,\n  isAuthenticated: false,\n  login: async () => {},\n  logout: async () => {},\n})\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const router = useRouter()\n\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token')\n      console.log('Checking token:', token) // Debug log\n\n      if (!token) {\n        setIsLoading(false)\n        return\n      }\n\n      client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n      const response = await client.get('/auth/me')\n      console.log('Auth check response:', response.data) // Debug log\n\n      if (response.data) {\n        setUser(response.data)\n        setIsAuthenticated(true)\n      }\n    } catch (error) {\n      console.error('CheckAuth error:', error)\n      setUser(null)\n      setIsAuthenticated(false)\n      localStorage.removeItem('token')\n      delete client.defaults.headers.common['Authorization']\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const login = async (token: string) => {\n    try {\n      console.log('Login called with token:', token) // Debug log\n\n      // Store token\n      localStorage.setItem('token', token)\n\n      // Set auth header\n      client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n      // Get user data\n      const response = await client.get('/auth/me')\n      console.log('Login user data:', response.data) // Debug log\n\n      setUser(response.data)\n      setIsAuthenticated(true)\n    } catch (error) {\n      console.error('Login error:', error)\n      localStorage.removeItem('token')\n      delete client.defaults.headers.common['Authorization']\n      throw error\n    }\n  }\n\n  const logout = async () => {\n    localStorage.removeItem('token')\n    delete client.defaults.headers.common['Authorization']\n    setUser(null)\n    setIsAuthenticated(false)\n    router.push('/auth/log-in')\n  }\n\n  useEffect(() => {\n    checkAuth()\n  }, [])\n\n  if (isLoading) {\n    return null // or a loading spinner\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext)\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;;AAE/C;AAOA;AACA;;;AATA;;;;AAuBO,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmB;IACxD,MAAM;IACN,iBAAiB;IACjB,OAAO,WAAa;IACpB,QAAQ,WAAa;AACvB;AAEO,SAAS,aAAa,EAAE,QAAQ,EAA2B;;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,QAAQ,GAAG,CAAC,mBAAmB,OAAO,YAAY;;YAElD,IAAI,CAAC,OAAO;gBACV,aAAa;gBACb;YACF;YAEA,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;YAEnE,MAAM,WAAW,MAAM,gHAAA,CAAA,SAAM,CAAC,GAAG,CAAC;YAClC,QAAQ,GAAG,CAAC,wBAAwB,SAAS,IAAI,EAAE,YAAY;;YAE/D,IAAI,SAAS,IAAI,EAAE;gBACjB,QAAQ,SAAS,IAAI;gBACrB,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oBAAoB;YAClC,QAAQ;YACR,mBAAmB;YACnB,aAAa,UAAU,CAAC;YACxB,OAAO,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;QACxD,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,QAAQ,OAAO;QACnB,IAAI;YACF,QAAQ,GAAG,CAAC,4BAA4B,OAAO,YAAY;;YAE3D,cAAc;YACd,aAAa,OAAO,CAAC,SAAS;YAE9B,kBAAkB;YAClB,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;YAEnE,gBAAgB;YAChB,MAAM,WAAW,MAAM,gHAAA,CAAA,SAAM,CAAC,GAAG,CAAC;YAClC,QAAQ,GAAG,CAAC,oBAAoB,SAAS,IAAI,EAAE,YAAY;;YAE3D,QAAQ,SAAS,IAAI;YACrB,mBAAmB;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,aAAa,UAAU,CAAC;YACxB,OAAO,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;YACtD,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,OAAO,gHAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;QACtD,QAAQ;QACR,mBAAmB;QACnB,OAAO,IAAI,CAAC;IACd;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG,EAAE;IAEL,IAAI,WAAW;QACb,OAAO,KAAK,uBAAuB;;IACrC;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAiB;YAAO;QAAO;kBACjE;;;;;;AAGP;GAjFgB;;QAIC,qIAAA,CAAA,YAAS;;;KAJV;AAmFT,MAAM,UAAU;;IAAM,OAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAAW;IAAtC"}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}