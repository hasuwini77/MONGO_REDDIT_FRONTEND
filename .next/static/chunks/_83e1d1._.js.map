{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/error-handling.ts"],"sourcesContent":["// lib/error-handling.ts\nimport { isAxiosError } from 'axios'\nimport { isRedirectError } from 'next/dist/client/components/redirect'\nimport { toast } from 'sonner'\n\nexport type ServerActionResponse<T = any> =\n  | { data: T; error?: never } // Success with data\n  | { token: string; user: T; error?: never } // Success with token and user\n  | { data?: never; error: string } // Error case\n\nexport const handleServerActionError = <T>(\n  response: ServerActionResponse<T>,\n): T => {\n  if ('error' in response) {\n    throw new Error(response.error)\n  }\n  if ('token' in response) {\n    return response.token as unknown as T\n  }\n  return response.data\n}\n\n// Handle Axios errors\nexport const handleAxiosError = (\n  error: unknown,\n): ServerActionResponse<never> => {\n  const defaultErrorMessage = 'something went wrong'\n\n  if (!isAxiosError(error)) {\n    console.error(error)\n    return { error: defaultErrorMessage }\n  }\n\n  return { error: error.response?.data.message || defaultErrorMessage }\n}\n\n// Toast error messages\nexport const toastServerError = (error: Error) => {\n  if (!isRedirectError(error)) {\n    toast.error(error.message)\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;;AAExB;AACA;AAFA;;;;AASO,MAAM,0BAA0B,CACrC;IAEA,IAAI,WAAW,UAAU;QACvB,MAAM,IAAI,MAAM,SAAS,KAAK;IAChC;IACA,IAAI,WAAW,UAAU;QACvB,OAAO,SAAS,KAAK;IACvB;IACA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,mBAAmB,CAC9B;IAEA,MAAM,sBAAsB;IAE5B,IAAI,CAAC,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;QACxB,QAAQ,KAAK,CAAC;QACd,OAAO;YAAE,OAAO;QAAoB;IACtC;IAEA,OAAO;QAAE,OAAO,MAAM,QAAQ,EAAE,KAAK,WAAW;IAAoB;AACtE;AAGO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ;QAC3B,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;IAC3B;AACF"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/sign-up.ts"],"sourcesContent":["'use server'\n\nimport { client } from 'lib/client'\nimport { handleAxiosError, ServerActionResponse } from 'lib/error-handling'\nimport { signUpSchema, SignUpValues } from 'lib/schemas'\n\nexport const signUp = async (\n  data: SignUpValues,\n): Promise<ServerActionResponse> => {\n  try {\n    const parsedData = signUpSchema.parse(data)\n    const response = await client.post('/auth/sign-up', parsedData)\n\n    // Check if we have both token and user in the response\n    if (!response.data.token || !response.data.user) {\n      return { error: 'Invalid response from server' }\n    }\n\n    return {\n      token: response.data.token,\n      user: response.data.user,\n    }\n  } catch (error) {\n    return handleAxiosError(error)\n  }\n}\n"],"names":[],"mappings":";;;;;IAMa"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/schemas.ts"],"sourcesContent":["import { z } from 'zod'\n\nexport const signUpSchema = z.object({\n  username: z.string().min(2, 'username must be at least 2 characters'),\n  password: z.string().min(6, 'password must be at least 6 characters'),\n})\n\nexport type SignUpValues = z.infer<typeof signUpSchema>\n\nexport const logInSchema = z.object({\n  username: z.string().min(1, 'username is required'),\n  password: z.string().min(1, 'password is required'),\n})\n\nexport type LogInValues = z.infer<typeof logInSchema>\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/field-error.tsx"],"sourcesContent":["import { type FieldError as TFieldError } from 'react-hook-form'\n\nexport const FieldError = ({ error }: { error: TFieldError | undefined }) => {\n  if (!error) return null\n\n  return <span className='text-sm text-primary'>{error.message}</span>\n}\n"],"names":[],"mappings":";;;;;AAEO,MAAM,aAAa,CAAC,EAAE,KAAK,EAAsC;IACtE,IAAI,CAAC,OAAO,OAAO;IAEnB,qBAAO,6LAAC;QAAK,WAAU;kBAAwB,MAAM,OAAO;;;;;;AAC9D;KAJa"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/auth/sign-up/form.tsx"],"sourcesContent":["'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { handleServerActionError, toastServerError } from 'lib/error-handling'\nimport { signUp } from 'actions/sign-up'\nimport { signUpSchema, SignUpValues } from 'lib/schemas'\nimport { FieldError } from 'components/field-error'\nimport { useAuthentication } from 'hooks/useAuthentification'\nimport { useRouter } from 'next/navigation'\n\nexport const SignUpForm = () => {\n  const { login } = useAuthentication()\n  const router = useRouter()\n\n  const { mutate, isPending } = useMutation({\n    mutationFn: async (values: SignUpValues) => {\n      const response = await signUp(values)\n      if ('error' in response) {\n        throw new Error(response.error)\n      }\n      return response\n    },\n    onSuccess: async (data) => {\n      if (data.token) {\n        await login(data.token)\n        router.push('/')\n      }\n    },\n    onError: toastServerError,\n  })\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<SignUpValues>({\n    resolver: zodResolver(signUpSchema),\n  })\n\n  return (\n    <form\n      onSubmit={handleSubmit((values) => mutate(values))}\n      className='flex w-full max-w-md flex-col gap-4'\n    >\n      <input\n        {...register('username')}\n        type='text'\n        placeholder='username'\n        className='input'\n      />\n      <FieldError error={errors.username} />\n      <input\n        {...register('password')}\n        type='password'\n        placeholder='password'\n        className='input'\n      />\n      <FieldError error={errors.password} />\n      <button type='submit' className='button-primary' disabled={isPending}>\n        {isPending ? 'signing up...' : 'sign up'}\n      </button>\n    </form>\n  )\n}\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;;;AAHA;;;;;;;;;;AAYO,MAAM,aAAa;;IACxB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,oBAAiB,AAAD;IAClC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QACxC,UAAU;sCAAE,OAAO;gBACjB,MAAM,WAAW,MAAM,CAAA,GAAA,wHAAA,CAAA,SAAM,AAAD,EAAE;gBAC9B,IAAI,WAAW,UAAU;oBACvB,MAAM,IAAI,MAAM,SAAS,KAAK;gBAChC;gBACA,OAAO;YACT;;QACA,SAAS;sCAAE,OAAO;gBAChB,IAAI,KAAK,KAAK,EAAE;oBACd,MAAM,MAAM,KAAK,KAAK;oBACtB,OAAO,IAAI,CAAC;gBACd;YACF;;QACA,SAAS,2HAAA,CAAA,mBAAgB;IAC3B;IAEA,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAgB;QACxB,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,iHAAA,CAAA,eAAY;IACpC;IAEA,qBACE,6LAAC;QACC,UAAU,aAAa,CAAC,SAAW,OAAO;QAC1C,WAAU;;0BAEV,6LAAC;gBACE,GAAG,SAAS,WAAW;gBACxB,MAAK;gBACL,aAAY;gBACZ,WAAU;;;;;;0BAEZ,6LAAC,gIAAA,CAAA,aAAU;gBAAC,OAAO,OAAO,QAAQ;;;;;;0BAClC,6LAAC;gBACE,GAAG,SAAS,WAAW;gBACxB,MAAK;gBACL,aAAY;gBACZ,WAAU;;;;;;0BAEZ,6LAAC,gIAAA,CAAA,aAAU;gBAAC,OAAO,OAAO,QAAQ;;;;;;0BAClC,6LAAC;gBAAO,MAAK;gBAAS,WAAU;gBAAiB,UAAU;0BACxD,YAAY,kBAAkB;;;;;;;;;;;;AAIvC;GArDa;;QACO,gIAAA,CAAA,oBAAiB;QACpB,qIAAA,CAAA,YAAS;QAEM,iLAAA,CAAA,cAAW;QAqBrC,iKAAA,CAAA,UAAO;;;KAzBA"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}