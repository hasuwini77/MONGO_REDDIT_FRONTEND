{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' },\n})\n\n// client.interceptors.response.use(\n//   (response) => {\n//     console.log('API Response:', response)\n//     return response\n//   },\n//   (error) => {\n//     console.error('API Error:', error)\n//     return Promise.reject(error)\n//   },\n// )\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,iBAAiB;IACjB,SAAS;QAAE,gBAAgB;IAAmB;AAChD,GAEA,oCAAoC;CACpC,oBAAoB;CACpB,6CAA6C;CAC7C,sBAAsB;CACtB,OAAO;CACP,iBAAiB;CACjB,yCAAyC;CACzC,mCAAmC;CACnC,OAAO;CACP,IAAI"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/hooks/useAuthentification.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { client } from 'lib/client'\nimport { useRouter } from 'next/navigation'\n\ninterface User {\n  id: string\n  username: string\n}\n\nexport function useAuthentication() {\n  const [user, setUser] = useState<User | null>(null)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const router = useRouter()\n\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token')\n      if (!token) {\n        setIsLoading(false)\n        return\n      }\n\n      client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      const response = await client.get('/auth/me')\n\n      if (response.data) {\n        setUser(response.data)\n        setIsAuthenticated(true)\n      }\n    } catch (error) {\n      console.error('Auth check error:', error)\n      localStorage.removeItem('token')\n      delete client.defaults.headers.common['Authorization']\n      setUser(null)\n      setIsAuthenticated(false)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    checkAuth()\n  }, [])\n\n  const login = async (token: string) => {\n    localStorage.setItem('token', token)\n    client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    await checkAuth()\n  }\n\n  const logout = async () => {\n    localStorage.removeItem('token')\n    delete client.defaults.headers.common['Authorization']\n    setUser(null)\n    setIsAuthenticated(false)\n    router.push('/auth/log-in')\n  }\n\n  return {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n  }\n}\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;AAJA;;;;AAWO,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACV,aAAa;gBACb;YACF;YAEA,6GAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;YACnE,MAAM,WAAW,MAAM,6GAAA,CAAA,SAAM,CAAC,GAAG,CAAC;YAElC,IAAI,SAAS,IAAI,EAAE;gBACjB,QAAQ,SAAS,IAAI;gBACrB,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qBAAqB;YACnC,aAAa,UAAU,CAAC;YACxB,OAAO,6GAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;YACtD,QAAQ;YACR,mBAAmB;QACrB,SAAU;YACR,aAAa;QACf;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO;QACnB,aAAa,OAAO,CAAC,SAAS;QAC9B,6GAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO;QACnE,MAAM;IACR;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,OAAO,6GAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;QACtD,QAAQ;QACR,mBAAmB;QACnB,OAAO,IAAI,CAAC;IACd;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/create-post.ts"],"sourcesContent":["// actions/create-post.ts\n'use server'\n\nimport { client } from 'lib/client'\nimport { ServerActionResponse } from 'lib/error-handling'\nimport { revalidateTag, revalidatePath } from 'next/cache'\n\ninterface Post {\n  _id: string\n  title: string\n  content: string\n  author: {\n    username: string\n  }\n  createdAt: string\n}\n\nexport const createPost = async (data: {\n  title: string\n  content: string\n}): Promise<ServerActionResponse<Post>> => {\n  try {\n    const response = await client.post<Post>('/posts', data)\n\n    revalidateTag('posts')\n    revalidatePath('/')\n\n    return { data: response.data }\n  } catch (error: any) {\n    return {\n      error:\n        error.response?.data?.message ||\n        error.message ||\n        'Failed to create post',\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;IAiBZ"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/field-error.tsx"],"sourcesContent":["import { type FieldError as TFieldError } from 'react-hook-form'\n\nexport const FieldError = ({ error }: { error: TFieldError | undefined }) => {\n  if (!error) return null\n\n  return <span className='text-sm text-primary'>{error.message}</span>\n}\n"],"names":[],"mappings":";;;;;AAEO,MAAM,aAAa,CAAC,EAAE,KAAK,EAAsC;IACtE,IAAI,CAAC,OAAO,OAAO;IAEnB,qBAAO,8OAAC;QAAK,WAAU;kBAAwB,MAAM,OAAO;;;;;;AAC9D"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/error-handling.ts"],"sourcesContent":["// lib/error-handling.ts\nimport { isAxiosError } from 'axios'\nimport { isRedirectError } from 'next/dist/client/components/redirect'\nimport { toast } from 'sonner'\n\nexport type ServerActionResponse<T = any> =\n  | { data: T; error?: never } // Success with data\n  | { token: string; user: T; error?: never } // Success with token and user\n  | { data?: never; error: string } // Error case\n\nexport const handleServerActionError = <T>(\n  response: ServerActionResponse<T>,\n): T => {\n  if ('error' in response) {\n    throw new Error(response.error)\n  }\n  if ('token' in response) {\n    return response.token as unknown as T\n  }\n  return response.data\n}\n\n// Handle Axios errors\nexport const handleAxiosError = (\n  error: unknown,\n): ServerActionResponse<never> => {\n  const defaultErrorMessage = 'something went wrong'\n\n  if (!isAxiosError(error)) {\n    console.error(error)\n    return { error: defaultErrorMessage }\n  }\n\n  return { error: error.response?.data.message || defaultErrorMessage }\n}\n\n// Toast error messages\nexport const toastServerError = (error: Error) => {\n  if (!isRedirectError(error)) {\n    toast.error(error.message)\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;;AAExB;AACA;AAFA;;;;AASO,MAAM,0BAA0B,CACrC;IAEA,IAAI,WAAW,UAAU;QACvB,MAAM,IAAI,MAAM,SAAS,KAAK;IAChC;IACA,IAAI,WAAW,UAAU;QACvB,OAAO,SAAS,KAAK;IACvB;IACA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,mBAAmB,CAC9B;IAEA,MAAM,sBAAsB;IAE5B,IAAI,CAAC,CAAA,GAAA,8IAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;QACxB,QAAQ,KAAK,CAAC;QACd,OAAO;YAAE,OAAO;QAAoB;IACtC;IAEA,OAAO;QAAE,OAAO,MAAM,QAAQ,EAAE,KAAK,WAAW;IAAoB;AACtE;AAGO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ;QAC3B,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;IAC3B;AACF"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/schemas.ts"],"sourcesContent":["import { z } from 'zod'\n\nexport const signUpSchema = z.object({\n  username: z.string().min(2, 'username must be at least 2 characters'),\n  password: z.string().min(6, 'password must be at least 6 characters'),\n})\n\nexport type SignUpValues = z.infer<typeof signUpSchema>\n\nexport const logInSchema = z.object({\n  username: z.string().min(1, 'username is required'),\n  password: z.string().min(1, 'password is required'),\n})\n\nexport type LogInValues = z.infer<typeof logInSchema>\n\nexport const createPostSchema = z.object({\n  title: z\n    .string()\n    .min(3, 'Title must be at least 3 characters')\n    .max(100, 'Title must be less than 100 characters'),\n  content: z\n    .string()\n    .min(10, 'Content must be at least 10 characters')\n    .max(10000, 'Content must be less than 10000 characters'),\n})\n\nexport type CreatePostValues = z.infer<typeof createPostSchema>\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,OAAO,oIAAA,CAAA,IAAC,CACL,MAAM,GACN,GAAG,CAAC,GAAG,uCACP,GAAG,CAAC,KAAK;IACZ,SAAS,oIAAA,CAAA,IAAC,CACP,MAAM,GACN,GAAG,CAAC,IAAI,0CACR,GAAG,CAAC,OAAO;AAChB"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}