{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/create-post.ts"],"sourcesContent":["'use server'\n\nimport { client } from 'lib/client'\nimport { ServerActionResponse } from 'lib/error-handling'\nimport { revalidateTag, revalidatePath } from 'next/cache'\n\ninterface Post {\n  _id: string\n  title: string\n  content: string\n  author: {\n    username: string\n  }\n  createdAt: string\n}\n\nexport const createPost = async (\n  data: { title: string; content: string },\n  token: string,\n): Promise<ServerActionResponse<Post>> => {\n  try {\n    if (!token) {\n      throw new Error('Authentication required')\n    }\n\n    // Add authorization header to the request\n    const response = await client.post<Post>('/posts', data, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n\n    revalidateTag('posts')\n    revalidatePath('/')\n\n    return { data: response.data }\n  } catch (error: any) {\n    return {\n      error:\n        error.response?.data?.message ||\n        error.message ||\n        'Failed to create post',\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;IAgBa"}},
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/field-error.tsx"],"sourcesContent":["import { type FieldError as TFieldError } from 'react-hook-form'\n\nexport const FieldError = ({ error }: { error: TFieldError | undefined }) => {\n  if (!error) return null\n\n  return <span className='text-sm text-primary'>{error.message}</span>\n}\n"],"names":[],"mappings":";;;;;AAEO,MAAM,aAAa,CAAC,EAAE,KAAK,EAAsC;IACtE,IAAI,CAAC,OAAO,OAAO;IAEnB,qBAAO,8OAAC;QAAK,WAAU;kBAAwB,MAAM,OAAO;;;;;;AAC9D"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/error-handling.ts"],"sourcesContent":["// lib/error-handling.ts\nimport { isAxiosError } from 'axios'\nimport { isRedirectError } from 'next/dist/client/components/redirect'\nimport { toast } from 'sonner'\n\nexport type ServerActionResponse<T = any> =\n  | { data: T; error?: never } // Success with data\n  | { token: string; user: T; error?: never } // Success with token and user\n  | { data?: never; error: string } // Error case\n\nexport const handleServerActionError = <T>(\n  response: ServerActionResponse<T>,\n): T => {\n  if ('error' in response) {\n    throw new Error(response.error)\n  }\n  if ('token' in response) {\n    return response.token as unknown as T\n  }\n  return response.data\n}\n\n// Handle Axios errors\nexport const handleAxiosError = (\n  error: unknown,\n): ServerActionResponse<never> => {\n  const defaultErrorMessage = 'something went wrong'\n\n  if (!isAxiosError(error)) {\n    console.error(error)\n    return { error: defaultErrorMessage }\n  }\n\n  return { error: error.response?.data.message || defaultErrorMessage }\n}\n\n// Toast error messages\nexport const toastServerError = (error: Error) => {\n  if (!isRedirectError(error)) {\n    toast.error(error.message)\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;;AAExB;AACA;AAFA;;;;AASO,MAAM,0BAA0B,CACrC;IAEA,IAAI,WAAW,UAAU;QACvB,MAAM,IAAI,MAAM,SAAS,KAAK;IAChC;IACA,IAAI,WAAW,UAAU;QACvB,OAAO,SAAS,KAAK;IACvB;IACA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,mBAAmB,CAC9B;IAEA,MAAM,sBAAsB;IAE5B,IAAI,CAAC,CAAA,GAAA,8IAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;QACxB,QAAQ,KAAK,CAAC;QACd,OAAO;YAAE,OAAO;QAAoB;IACtC;IAEA,OAAO;QAAE,OAAO,MAAM,QAAQ,EAAE,KAAK,WAAW;IAAoB;AACtE;AAGO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ;QAC3B,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;IAC3B;AACF"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/schemas.ts"],"sourcesContent":["import { z } from 'zod'\n\nexport const signUpSchema = z.object({\n  username: z.string().min(2, 'username must be at least 2 characters'),\n  password: z.string().min(6, 'password must be at least 6 characters'),\n})\n\nexport type SignUpValues = z.infer<typeof signUpSchema>\n\nexport const logInSchema = z.object({\n  username: z.string().min(1, 'username is required'),\n  password: z.string().min(1, 'password is required'),\n})\n\nexport type LogInValues = z.infer<typeof logInSchema>\n\nexport const createPostSchema = z.object({\n  title: z\n    .string()\n    .min(3, 'Title must be at least 3 characters')\n    .max(100, 'Title must be less than 100 characters'),\n  content: z\n    .string()\n    .min(10, 'Content must be at least 10 characters')\n    .max(10000, 'Content must be less than 10000 characters'),\n})\n\nexport type CreatePostValues = z.infer<typeof createPostSchema>\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,OAAO,oIAAA,CAAA,IAAC,CACL,MAAM,GACN,GAAG,CAAC,GAAG,uCACP,GAAG,CAAC,KAAK;IACZ,SAAS,oIAAA,CAAA,IAAC,CACP,MAAM,GACN,GAAG,CAAC,IAAI,0CACR,GAAG,CAAC,OAAO;AAChB"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/create-post/form.tsx"],"sourcesContent":["'use client'\n\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useMutation } from '@tanstack/react-query'\nimport { useRouter } from 'next/navigation'\nimport { HashLoader } from 'react-spinners'\nimport { createPost } from 'actions/create-post'\nimport { FieldError } from 'components/field-error'\nimport { toastServerError } from 'lib/error-handling'\nimport { createPostSchema, CreatePostValues } from 'lib/schemas'\nimport { useAuthentication } from 'hooks/useAuthentification'\n\nexport const CreatePostForm = () => {\n  const router = useRouter()\n  const { isAuthenticated } = useAuthentication()\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CreatePostValues>({\n    resolver: zodResolver(createPostSchema),\n  })\n\n  const { mutate, isPending: isSubmitting } = useMutation({\n    mutationFn: async (values: CreatePostValues) => {\n      const token = localStorage.getItem('token')\n      if (!token) {\n        throw new Error('Authentication required')\n      }\n\n      // Add artificial delay for the loader\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n\n      const response = await createPost(values, token)\n      if ('error' in response) {\n        throw new Error(response.error)\n      }\n      return response\n    },\n    onSuccess: (response) => {\n      if ('data' in response) {\n        router.push(`/posts/${response.data._id}`)\n      }\n    },\n    onError: toastServerError,\n  })\n\n  const onSubmit = (values: CreatePostValues) => {\n    mutate(values)\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      className='mx-auto flex max-w-xl flex-col gap-6 p-4'\n    >\n      {/* Title Input */}\n      <div>\n        <input\n          {...register('title')}\n          type='text'\n          placeholder='Post title'\n          className='input w-full rounded-lg border px-4 py-3 text-lg focus:outline-none focus:ring-2 focus:ring-blue-500'\n          disabled={isSubmitting}\n        />\n        <FieldError error={errors.title} />\n      </div>\n\n      {/* Content Textarea */}\n      <div>\n        <textarea\n          {...register('content')}\n          placeholder='Write your post content here...'\n          className='input min-h-[200px] w-full rounded-lg border px-4 py-3 text-lg focus:outline-none focus:ring-2 focus:ring-blue-500'\n          disabled={isSubmitting}\n        />\n        <FieldError error={errors.content} />\n      </div>\n\n      {/* Action Buttons */}\n      <div className='flex flex-col gap-4 sm:flex-row'>\n        <button\n          type='submit'\n          className='button-primary relative w-full rounded-lg bg-green-500 px-6 py-3 text-lg text-white transition duration-300 hover:bg-green-700 focus:outline-none sm:w-auto'\n          disabled={isSubmitting}\n        >\n          {isSubmitting ? (\n            <div className='flex items-center justify-center gap-2'>\n              <HashLoader size={20} color='#ffffff' />\n              <span>Creating post...</span>\n            </div>\n          ) : (\n            'Create Post'\n          )}\n        </button>\n        <button\n          type='button'\n          onClick={() => router.back()}\n          className='button-secondary w-full rounded-lg bg-red-500 px-6 py-3 text-lg text-white transition duration-300 hover:bg-red-700 focus:outline-none sm:w-auto'\n          disabled={isSubmitting}\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AATA;AAEA;AAEA;AANA;;;;;;;;;;;;AAaO,MAAM,iBAAiB;IAC5B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD;IAE5C,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAoB;QAC5B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,8GAAA,CAAA,mBAAgB;IACxC;IAEA,MAAM,EAAE,MAAM,EAAE,WAAW,YAAY,EAAE,GAAG,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACtD,YAAY,OAAO;YACjB,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACV,MAAM,IAAI,MAAM;YAClB;YAEA,sCAAsC;YACtC,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;YAEnD,MAAM,WAAW,MAAM,CAAA,GAAA,yHAAA,CAAA,aAAU,AAAD,EAAE,QAAQ;YAC1C,IAAI,WAAW,UAAU;gBACvB,MAAM,IAAI,MAAM,SAAS,KAAK;YAChC;YACA,OAAO;QACT;QACA,WAAW,CAAC;YACV,IAAI,UAAU,UAAU;gBACtB,OAAO,IAAI,CAAC,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC,GAAG,EAAE;YAC3C;QACF;QACA,SAAS,wHAAA,CAAA,mBAAgB;IAC3B;IAEA,MAAM,WAAW,CAAC;QAChB,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,UAAU,aAAa;QACvB,WAAU;;0BAGV,8OAAC;;kCACC,8OAAC;wBACE,GAAG,SAAS,QAAQ;wBACrB,MAAK;wBACL,aAAY;wBACZ,WAAU;wBACV,UAAU;;;;;;kCAEZ,8OAAC,6HAAA,CAAA,aAAU;wBAAC,OAAO,OAAO,KAAK;;;;;;;;;;;;0BAIjC,8OAAC;;kCACC,8OAAC;wBACE,GAAG,SAAS,UAAU;wBACvB,aAAY;wBACZ,WAAU;wBACV,UAAU;;;;;;kCAEZ,8OAAC,6HAAA,CAAA,aAAU;wBAAC,OAAO,OAAO,OAAO;;;;;;;;;;;;0BAInC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,WAAU;wBACV,UAAU;kCAET,6BACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,+LAAA,CAAA,aAAU;oCAAC,MAAM;oCAAI,OAAM;;;;;;8CAC5B,8OAAC;8CAAK;;;;;;;;;;;mCAGR;;;;;;kCAGJ,8OAAC;wBACC,MAAK;wBACL,SAAS,IAAM,OAAO,IAAI;wBAC1B,WAAU;wBACV,UAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/create-post/authWrapper.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { useAuthentication } from 'hooks/useAuthentification'\nimport { CreatePostForm } from './form'\n\nexport function CreatePostAuthWrapper() {\n  const { isAuthenticated, isLoading } = useAuthentication()\n  const router = useRouter()\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      router.push('/auth/log-in')\n    }\n  }, [isLoading, isAuthenticated, router])\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  if (!isAuthenticated) {\n    return null\n  }\n\n  return <CreatePostForm />\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOO,SAAS;IACd,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD;IACvD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,aAAa,CAAC,iBAAiB;YAClC,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAW;QAAiB;KAAO;IAEvC,IAAI,WAAW;QACb,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,IAAI,CAAC,iBAAiB;QACpB,OAAO;IACT;IAEA,qBAAO,8OAAC,0IAAA,CAAA,iBAAc;;;;;AACxB"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}