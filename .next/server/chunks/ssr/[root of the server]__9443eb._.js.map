{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/IconSelector.tsx"],"sourcesContent":["import { UserCircle, User, UserCog, UserCircle2, Ghost } from 'lucide-react'\nimport { VALID_ICONS } from './Profile'\n\nconst icons = {\n  UserCircle,\n  User,\n  UserCog,\n  UserCircle2,\n  Ghost,\n}\n\ntype IconName = keyof typeof icons\n\ninterface IconSelectorProps {\n  selected: IconName\n  onChange: (iconName: IconName) => void\n}\n\nexport const IconSelector = ({ selected, onChange }: IconSelectorProps) => {\n  return (\n    <div className='flex items-center gap-4'>\n      {Object.entries(VALID_ICONS).map(([name, Icon]) => (\n        <button\n          key={name}\n          onClick={() => onChange(name as IconName)}\n          className={`rounded-full p-2 transition-colors hover:bg-gray-100 ${selected === name ? 'bg-purple-100 ring-2 ring-purple-500' : ''}`}\n        >\n          <Icon\n            className={`h-8 w-8 ${\n              selected === name ? 'text-purple-500' : 'text-gray-600'\n            }`}\n          />\n        </button>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AADA;AAAA;AAAA;AAAA;AAAA;;;;AAGA,MAAM,QAAQ;IACZ,YAAA,kNAAA,CAAA,aAAU;IACV,MAAA,kMAAA,CAAA,OAAI;IACJ,SAAA,4MAAA,CAAA,UAAO;IACP,aAAA,4NAAA,CAAA,cAAW;IACX,OAAA,oMAAA,CAAA,QAAK;AACP;AASO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAqB;IACpE,qBACE,8OAAC;QAAI,WAAU;kBACZ,OAAO,OAAO,CAAC,sHAAA,CAAA,cAAW,EAAE,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,iBAC5C,8OAAC;gBAEC,SAAS,IAAM,SAAS;gBACxB,WAAW,CAAC,qDAAqD,EAAE,aAAa,OAAO,yCAAyC,IAAI;0BAEpI,cAAA,8OAAC;oBACC,WAAW,CAAC,QAAQ,EAClB,aAAa,OAAO,oBAAoB,iBACxC;;;;;;eAPC;;;;;;;;;;AAaf"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' },\n})\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,iBAAiB;IACjB,SAAS;QAAE,gBAAgB;IAAmB;AAChD"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/hooks/useAuthentification.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { client } from 'lib/client'\nimport { useRouter } from 'next/navigation'\nimport { User } from 'types/types'\n\nexport function useAuthentication() {\n  const [user, setUser] = useState<User | null>(null)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const router = useRouter()\n\n  const updateUser = (updatedUser: User) => {\n    setUser(updatedUser)\n  }\n\n  const refreshToken = async () => {\n    try {\n      const response = await client.post('/auth/refresh-token')\n      const newToken = response.data.token\n      localStorage.setItem('token', newToken)\n      client.defaults.headers.common['Authorization'] = `Bearer ${newToken}`\n      return newToken\n    } catch (error) {\n      console.error('Token refresh failed:', error)\n      await logout()\n      return null\n    }\n  }\n\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token')\n      if (!token) {\n        setIsLoading(false)\n        return\n      }\n\n      client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n\n      try {\n        const response = await client.get('/auth/me')\n        if (response.data) {\n          setUser(response.data)\n          setIsAuthenticated(true)\n        }\n      } catch (error: any) {\n        // If we get a 401 error, try to refresh the token\n        if (error?.response?.status === 401) {\n          const newToken = await refreshToken()\n          if (newToken) {\n            // Retry the original request\n            const retryResponse = await client.get('/auth/me')\n            if (retryResponse.data) {\n              setUser(retryResponse.data)\n              setIsAuthenticated(true)\n            }\n          }\n        } else {\n          throw error\n        }\n      }\n    } catch (error) {\n      console.error('Auth check error:', error)\n      localStorage.removeItem('token')\n      delete client.defaults.headers.common['Authorization']\n      setUser(null)\n      setIsAuthenticated(false)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  // Set up an axios interceptor to handle token refresh\n  useEffect(() => {\n    const interceptor = client.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config\n\n        // If we get a 401 error and haven't tried to refresh yet\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true\n\n          try {\n            const newToken = await refreshToken()\n            if (newToken) {\n              originalRequest.headers['Authorization'] = `Bearer ${newToken}`\n              return client(originalRequest)\n            }\n          } catch (refreshError) {\n            return Promise.reject(refreshError)\n          }\n        }\n        return Promise.reject(error)\n      },\n    )\n\n    // Clean up interceptor on unmount\n    return () => {\n      client.interceptors.response.eject(interceptor)\n    }\n  }, [])\n\n  useEffect(() => {\n    checkAuth()\n  }, [])\n\n  const login = async (token: string) => {\n    localStorage.setItem('token', token)\n    client.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    await checkAuth()\n  }\n\n  const logout = async () => {\n    localStorage.removeItem('token')\n    delete client.defaults.headers.common['Authorization']\n    setUser(null)\n    setIsAuthenticated(false)\n    router.push('/auth/log-in')\n  }\n\n  return {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    updateUser,\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/Profile.tsx"],"sourcesContent":["'use client'\nimport { useState } from 'react'\n\nimport { IconSelector } from './IconSelector'\nimport { useAuthentication } from 'hooks/useAuthentification'\nimport { UserCircle, User, UserCog, UserCircle2, Ghost } from 'lucide-react'\n\nexport const VALID_ICONS = {\n  UserCircle,\n  User,\n  UserCog,\n  UserCircle2,\n  Ghost,\n} as const\n\nexport type IconName = keyof typeof VALID_ICONS\n\nexport const Profile = () => {\n  const { user, updateUser } = useAuthentication()\n  const [username, setUsername] = useState(user?.username || '')\n  const [selectedIcon, setSelectedIcon] = useState<IconName>(\n    (user?.iconName as IconName) || 'UserCircle',\n  )\n  const [message, setMessage] = useState('')\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    try {\n      const response = await fetch('/api/auth/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify({\n          username,\n          iconName: selectedIcon,\n        }),\n      })\n\n      const data = await response.json()\n      if (response.ok) {\n        setMessage('Profile updated successfully')\n        // Make sure to include all user properties when updating\n        updateUser({\n          ...user!,\n          username,\n          iconName: selectedIcon,\n        })\n      } else {\n        setMessage(data.message || 'Update failed')\n      }\n    } catch (error) {\n      setMessage('An error occurred')\n    }\n  }\n\n  return (\n    <div className='mx-auto mt-8 max-w-md rounded-lg bg-white p-6 shadow'>\n      <h2 className='mb-6 text-2xl font-bold'>Profile Settings</h2>\n      {message && (\n        <div className='mb-4 rounded bg-blue-100 p-2 text-blue-700'>\n          {message}\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit} className='space-y-6'>\n        <div>\n          <label className='mb-2 block text-sm font-medium text-gray-700'>\n            Select Your Icon\n          </label>\n          <IconSelector selected={selectedIcon} onChange={setSelectedIcon} />\n        </div>\n\n        <div>\n          <label className='mb-2 block text-sm font-medium text-gray-700'>\n            Username\n          </label>\n          <input\n            type='text'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className='w-full rounded border p-2 focus:border-purple-500 focus:ring-purple-500'\n          />\n        </div>\n\n        <button\n          type='submit'\n          className='w-full rounded bg-purple-600 px-4 py-2 text-white transition-colors hover:bg-purple-700'\n        >\n          Update Profile\n        </button>\n      </form>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;;;;;;AAOO,MAAM,cAAc;IACzB,YAAA,kNAAA,CAAA,aAAU;IACV,MAAA,kMAAA,CAAA,OAAI;IACJ,SAAA,4MAAA,CAAA,UAAO;IACP,aAAA,4NAAA,CAAA,cAAW;IACX,OAAA,oMAAA,CAAA,QAAK;AACP;AAIO,MAAM,UAAU;IACrB,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,YAAY;IAC3D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAC7C,AAAC,MAAM,YAAyB;IAElC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,qBAAqB;gBAChD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,UAAU;gBAC1D;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA,UAAU;gBACZ;YACF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,SAAS,EAAE,EAAE;gBACf,WAAW;gBACX,yDAAyD;gBACzD,WAAW;oBACT,GAAG,IAAI;oBACP;oBACA,UAAU;gBACZ;YACF,OAAO;gBACL,WAAW,KAAK,OAAO,IAAI;YAC7B;QACF,EAAE,OAAO,OAAO;YACd,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;YACvC,yBACC,8OAAC;gBAAI,WAAU;0BACZ;;;;;;0BAIL,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC,2HAAA,CAAA,eAAY;gCAAC,UAAU;gCAAc,UAAU;;;;;;;;;;;;kCAGlD,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,WAAU;;;;;;;;;;;;kCAId,8OAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}