{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/posts/%5Bid%5D/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/posts/[id]/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/posts/[id]/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/posts/%5Bid%5D/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(main)/posts/[id]/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/posts/[id]/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' },\n})\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,iBAAiB;IACjB,SAAS;QAAE,gBAAgB;IAAmB;AAChD"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/get-post.ts"],"sourcesContent":["'use server'\n\nimport { client } from 'lib/client'\nimport { ServerActionResponse } from 'lib/error-handling'\n\nexport const getPost = async (id: string): Promise<ServerActionResponse> => {\n  if (!id) {\n    return { error: 'Post ID is required' }\n  }\n\n  try {\n    const response = await client.get(`/posts/${id}`)\n    return { data: response.data }\n  } catch (error) {\n    console.error('Server Action: Error:', error)\n    return {\n      error: error instanceof Error ? error.message : 'Failed to fetch post',\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAGO,MAAM,UAAU,OAAO;IAC5B,IAAI,CAAC,IAAI;QACP,OAAO;YAAE,OAAO;QAAsB;IACxC;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,6GAAA,CAAA,SAAM,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI;QAChD,OAAO;YAAE,MAAM,SAAS,IAAI;QAAC;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;YACL,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;;;IAda;;AAAA,+OAAA"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/create-comment.ts"],"sourcesContent":["'use server'\n\nimport { client } from 'lib/client'\nimport { ServerActionResponse } from 'lib/error-handling'\nimport { revalidateTag, revalidatePath } from 'next/cache'\nimport { Post } from 'types/types'\n\ninterface Comment {\n  _id: string\n  content: string\n  author: {\n    username: string\n  }\n  createdAt: string\n}\n\ninterface PostWithComments extends Post {\n  comments: Comment[]\n}\n\nexport const addComment = async (\n  postId: string,\n  data: { content: string },\n  token: string,\n): Promise<ServerActionResponse<PostWithComments>> => {\n  try {\n    if (!token) {\n      throw new Error('Authentication required')\n    }\n\n    const response = await client.post<PostWithComments>(\n      `/posts/${postId}/comments`,\n      data,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    )\n\n    revalidateTag(`post-${postId}`)\n    revalidateTag('posts')\n    revalidatePath(`/posts/${postId}`)\n\n    return { data: response.data }\n  } catch (error: any) {\n    return {\n      error:\n        error.response?.data?.message ||\n        error.message ||\n        'Failed to add comment',\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;;;;;;AAgBO,MAAM,aAAa,OACxB,QACA,MACA;IAEA,IAAI;QACF,IAAI,CAAC,OAAO;YACV,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAChC,CAAC,OAAO,EAAE,OAAO,SAAS,CAAC,EAC3B,MACA;YACE,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;YAClC;QACF;QAGF,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE,CAAC,KAAK,EAAE,QAAQ;QAC9B,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,OAAO,EAAE,QAAQ;QAEjC,OAAO;YAAE,MAAM,SAAS,IAAI;QAAC;IAC/B,EAAE,OAAO,OAAY;QACnB,OAAO;YACL,OACE,MAAM,QAAQ,EAAE,MAAM,WACtB,MAAM,OAAO,IACb;QACJ;IACF;AACF;;;IAjCa;;AAAA,+OAAA"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}