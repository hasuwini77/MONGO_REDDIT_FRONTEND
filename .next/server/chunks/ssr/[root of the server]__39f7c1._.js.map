{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/posts/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/posts/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/posts/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/posts/page.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/posts/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/posts/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,gCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/page.tsx"],"sourcesContent":["import MyPosts from 'app/posts/page'\n\nexport default function Home() {\n  return (\n    <div className='main'>\n      <h1> Home Page</h1>\n      <div>\n        <MyPosts />\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;0BACC,cAAA,8OAAC,qHAAA,CAAA,UAAO;;;;;;;;;;;;;;;;AAIhB"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  headers: { 'Content-Type': 'application/json' },\n})\n\nclient.interceptors.response.use(\n  (response) => {\n    console.log('API Response:', response)\n    return response\n  },\n  (error) => {\n    console.error('API Error:', error)\n    return Promise.reject(error)\n  },\n)\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,SAAS;QAAE,gBAAgB;IAAmB;AAChD;AAEA,OAAO,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC9B,CAAC;IACC,QAAQ,GAAG,CAAC,iBAAiB;IAC7B,OAAO;AACT,GACA,CAAC;IACC,QAAQ,KAAK,CAAC,cAAc;IAC5B,OAAO,QAAQ,MAAM,CAAC;AACxB"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/get-post.ts"],"sourcesContent":["'use server'\n\nimport { client } from 'lib/client'\nimport { ServerActionResponse } from 'lib/error-handling'\n\ninterface Post {\n  _id: string\n  title: string\n  content: string\n  author: {\n    username: string\n  }\n  comments: Array<{\n    content: string\n    author: {\n      username: string\n    }\n  }>\n  createdAt: string\n}\n\nexport const getPost = async (id: string): Promise<ServerActionResponse> => {\n  try {\n    console.log('Server Action: Fetching post with ID:', id) // Debug log\n    const response = await client.get(`/posts/${id}`)\n    console.log('Server Action: API response:', response.data) // Debug log\n    return { data: response.data }\n  } catch (error) {\n    console.error('Server Action: Error:', error) // Error log\n    return {\n      error: error instanceof Error ? error.message : 'Failed to fetch post',\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAmBO,MAAM,UAAU,OAAO;IAC5B,IAAI;QACF,QAAQ,GAAG,CAAC,yCAAyC,IAAI,YAAY;;QACrE,MAAM,WAAW,MAAM,6GAAA,CAAA,SAAM,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI;QAChD,QAAQ,GAAG,CAAC,gCAAgC,SAAS,IAAI,EAAE,YAAY;;QACvE,OAAO;YAAE,MAAM,SAAS,IAAI;QAAC;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB,OAAO,YAAY;;QAC1D,OAAO;YACL,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;;;IAZa;;AAAA,+OAAA"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/.next-internal/server/app/%28main%29/page/actions.js"],"sourcesContent":["export {getPost as '7f2fddae5e8b8e7513eb2cb7f5528abaa56bbe0669'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";;;AAAA"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}