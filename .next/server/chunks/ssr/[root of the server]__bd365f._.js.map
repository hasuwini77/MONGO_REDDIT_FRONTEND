{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/create-post/authWrapper.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreatePostAuthWrapper = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreatePostAuthWrapper() from the server but CreatePostAuthWrapper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/create-post/authWrapper.tsx <module evaluation>\",\n    \"CreatePostAuthWrapper\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,wEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/create-post/authWrapper.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const CreatePostAuthWrapper = registerClientReference(\n    function() { throw new Error(\"Attempted to call CreatePostAuthWrapper() from the server but CreatePostAuthWrapper is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/create-post/authWrapper.tsx\",\n    \"CreatePostAuthWrapper\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,oDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/create-post/page.tsx"],"sourcesContent":["import { CreatePostAuthWrapper } from './authWrapper'\n\nexport default function CreatePostPage() {\n  return (\n    <div className='container mx-auto max-w-2xl p-4'>\n      <h1 className='mb-6 text-2xl font-bold'>Create a New Post</h1>\n      <CreatePostAuthWrapper />\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC,iJAAA,CAAA,wBAAqB;;;;;;;;;;;AAG5B"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' },\n})\n\n// client.interceptors.response.use(\n//   (response) => {\n//     console.log('API Response:', response)\n//     return response\n//   },\n//   (error) => {\n//     console.error('API Error:', error)\n//     return Promise.reject(error)\n//   },\n// )\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,iBAAiB;IACjB,SAAS;QAAE,gBAAgB;IAAmB;AAChD,GAEA,oCAAoC;CACpC,oBAAoB;CACpB,6CAA6C;CAC7C,sBAAsB;CACtB,OAAO;CACP,iBAAiB;CACjB,yCAAyC;CACzC,mCAAmC;CACnC,OAAO;CACP,IAAI"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/create-post.ts"],"sourcesContent":["// actions/create-post.ts\n'use server'\n\nimport { client } from 'lib/client'\nimport { ServerActionResponse } from 'lib/error-handling'\nimport { revalidateTag, revalidatePath } from 'next/cache'\n\ninterface Post {\n  _id: string\n  title: string\n  content: string\n  author: {\n    username: string\n  }\n  createdAt: string\n}\n\nexport const createPost = async (data: {\n  title: string\n  content: string\n}): Promise<ServerActionResponse<Post>> => {\n  try {\n    const response = await client.post<Post>('/posts', data)\n\n    revalidateTag('posts')\n    revalidatePath('/')\n\n    return { data: response.data }\n  } catch (error: any) {\n    return {\n      error:\n        error.response?.data?.message ||\n        error.message ||\n        'Failed to create post',\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;AAGzB;AAEA;;;;;;AAYO,MAAM,aAAa,OAAO;IAI/B,IAAI;QACF,MAAM,WAAW,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAO,UAAU;QAEnD,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE;QACd,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QAEf,OAAO;YAAE,MAAM,SAAS,IAAI;QAAC;IAC/B,EAAE,OAAO,OAAY;QACnB,OAAO;YACL,OACE,MAAM,QAAQ,EAAE,MAAM,WACtB,MAAM,OAAO,IACb;QACJ;IACF;AACF;;;IAnBa;;AAAA,+OAAA"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}