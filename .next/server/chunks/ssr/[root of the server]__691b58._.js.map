{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/actions/get-post.ts"],"sourcesContent":["'use server'\n\nimport { client } from 'lib/client'\nimport { ServerActionResponse } from 'lib/error-handling'\n\ninterface Post {\n  _id: string\n  title: string\n  content: string\n  author: {\n    username: string\n  }\n  comments: Array<{\n    content: string\n    author: {\n      username: string\n    }\n  }>\n  createdAt: string\n}\n\nexport const getPost = async (id: string): Promise<ServerActionResponse> => {\n  if (!id) {\n    return { error: 'Post ID is required' }\n  }\n\n  try {\n    console.log('Server Action: Fetching post with ID:', id) // Debug log\n    const response = await client.get(`/posts/${id}`)\n    console.log('Server Action: API response:', response.data) // Debug log\n    return { data: response.data }\n  } catch (error) {\n    console.error('Server Action: Error:', error) // Error log\n    return {\n      error: error instanceof Error ? error.message : 'Failed to fetch post',\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;IAqBa"}},
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/error-handling.ts"],"sourcesContent":["import { isAxiosError } from 'axios'\nimport { isRedirectError } from 'next/dist/client/components/redirect'\nimport { toast } from 'sonner'\n\n// lib/error-handling.ts\n\nexport type ServerActionResponse<T = any> =\n  | { data: T; error?: never } // Success case\n  | { data?: never; error: string } // Error case\n\nexport const handleServerActionError = <T>(\n  response: ServerActionResponse<T>,\n): T => {\n  if ('error' in response) {\n    throw new Error(response.error)\n  }\n  return response.data\n}\nexport const handleAxiosError = (error: unknown): ServerActionResponse => {\n  const defaultErrorMessage = 'something went wrong'\n\n  if (!isAxiosError(error)) {\n    console.error(error)\n    return { error: defaultErrorMessage }\n  }\n\n  return { error: error.response?.data.message || defaultErrorMessage }\n}\n\nexport const toastServerError = (error: Error) => {\n  if (!isRedirectError(error)) {\n    toast.error(error.message)\n  }\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;AAUO,MAAM,0BAA0B,CACrC;IAEA,IAAI,WAAW,UAAU;QACvB,MAAM,IAAI,MAAM,SAAS,KAAK;IAChC;IACA,OAAO,SAAS,IAAI;AACtB;AACO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,sBAAsB;IAE5B,IAAI,CAAC,CAAA,GAAA,8IAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;QACxB,QAAQ,KAAK,CAAC;QACd,OAAO;YAAE,OAAO;QAAoB;IACtC;IAEA,OAAO;QAAE,OAAO,MAAM,QAAQ,EAAE,KAAK,WAAW;IAAoB;AACtE;AAEO,MAAM,mBAAmB,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ;QAC3B,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;IAC3B;AACF"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/posts/page.tsx"],"sourcesContent":["'use client'\n\nimport { useMutation } from '@tanstack/react-query'\nimport { getPosts } from 'actions/get-posts'\nimport { handleServerActionError } from 'lib/error-handling'\nimport Link from 'next/link'\nimport { useEffect } from 'react'\n\ninterface Post {\n  _id: string\n  title: string\n  content: string\n  author: {\n    username: string\n  }\n  comments: Array<{\n    content: string\n    author: {\n      username: string\n    }\n  }>\n  createdAt: string\n}\n\nconst MyPosts = () => {\n  const {\n    mutate,\n    data: posts,\n    isPending,\n    error,\n  } = useMutation({\n    mutationFn: async () => {\n      console.log('Fetching all posts') // Debug log\n      const result = await getPosts()\n      console.log('Server response:', result) // Debug log\n      return handleServerActionError(result) as Post[]\n    },\n    onError: (error) => {\n      console.error('Error fetching posts:', error) // Error log\n    },\n    onSuccess: (data) => {\n      console.log('Successfully fetched posts:', data) // Success log\n    },\n  })\n\n  useEffect(() => {\n    console.log('Effect triggered') // Debug log\n    mutate()\n  }, [mutate])\n\n  if (isPending) {\n    return (\n      <div className='flex items-center justify-center p-4'>\n        <div className='text-lg'>Loading posts...</div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className='flex items-center justify-center p-4'>\n        <div className='text-red-500'>\n          Error loading posts:{' '}\n          {error instanceof Error ? error.message : 'Unknown error'}\n        </div>\n      </div>\n    )\n  }\n\n  if (!posts || posts.length === 0) {\n    return (\n      <div className='flex items-center justify-center p-4'>\n        <div className='text-lg'>No posts found</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className='mx-auto max-w-4xl p-4'>\n      <h1 className='mb-6 text-3xl font-bold'>All Posts</h1>\n      <div className='space-y-6'>\n        {posts.map((post) => (\n          <Link\n            href={`/posts/${post._id}`}\n            key={post._id}\n            className='block rounded-lg border p-4 transition hover:bg-gray-50'\n          >\n            <article>\n              <h2 className='text-xl font-semibold'>{post.title}</h2>\n              <div className='mt-2 text-gray-600'>\n                {post.content.length > 150\n                  ? `${post.content.substring(0, 150)}...`\n                  : post.content}\n              </div>\n              <div className='mt-2 text-sm text-gray-500'>\n                Posted by {post.author.username} â€¢{' '}\n                {new Date(post.createdAt).toLocaleDateString()}\n              </div>\n              <div className='mt-2 text-sm text-gray-500'>\n                {post.comments.length} comment\n                {post.comments.length !== 1 ? 's' : ''}\n              </div>\n            </article>\n          </Link>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default MyPosts\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AAJA;AAFA;;;;;;;AAwBA,MAAM,UAAU;IACd,MAAM,EACJ,MAAM,EACN,MAAM,KAAK,EACX,SAAS,EACT,KAAK,EACN,GAAG,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACd,YAAY;YACV,QAAQ,GAAG,CAAC,sBAAsB,YAAY;;YAC9C,MAAM,SAAS,MAAM,CAAA,GAAA,uHAAA,CAAA,WAAQ,AAAD;YAC5B,QAAQ,GAAG,CAAC,oBAAoB,QAAQ,YAAY;;YACpD,OAAO,CAAA,GAAA,wHAAA,CAAA,0BAAuB,AAAD,EAAE;QACjC;QACA,SAAS,CAAC;YACR,QAAQ,KAAK,CAAC,yBAAyB,OAAO,YAAY;;QAC5D;QACA,WAAW,CAAC;YACV,QAAQ,GAAG,CAAC,+BAA+B,MAAM,cAAc;;QACjE;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,oBAAoB,YAAY;;QAC5C;IACF,GAAG;QAAC;KAAO;IAEX,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAAU;;;;;;;;;;;IAG/B;IAEA,IAAI,OAAO;QACT,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;oBAAe;oBACP;oBACpB,iBAAiB,QAAQ,MAAM,OAAO,GAAG;;;;;;;;;;;;IAIlD;IAEA,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;QAChC,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAAU;;;;;;;;;;;IAG/B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,4HAAA,CAAA,UAAI;wBACH,MAAM,CAAC,OAAO,EAAE,KAAK,GAAG,EAAE;wBAE1B,WAAU;kCAEV,cAAA,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAyB,KAAK,KAAK;;;;;;8CACjD,8OAAC;oCAAI,WAAU;8CACZ,KAAK,OAAO,CAAC,MAAM,GAAG,MACnB,GAAG,KAAK,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,GACtC,KAAK,OAAO;;;;;;8CAElB,8OAAC;oCAAI,WAAU;;wCAA6B;wCAC/B,KAAK,MAAM,CAAC,QAAQ;wCAAC;wCAAG;wCAClC,IAAI,KAAK,KAAK,SAAS,EAAE,kBAAkB;;;;;;;8CAE9C,8OAAC;oCAAI,WAAU;;wCACZ,KAAK,QAAQ,CAAC,MAAM;wCAAC;wCACrB,KAAK,QAAQ,CAAC,MAAM,KAAK,IAAI,MAAM;;;;;;;;;;;;;uBAhBnC,KAAK,GAAG;;;;;;;;;;;;;;;;AAwBzB;uCAEe"}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}