{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/components/header.tsx"],"sourcesContent":["import Link from 'next/link'\n\nexport const Header = () => {\n  return (\n    <header className='flex h-16 w-full items-center justify-between gap-4 px-4 py-2 md:px-20'>\n      <Link href='/' className='text-2xl font-bold'>\n        reddit\n      </Link>\n      <Link href='/auth/log-in' className='button-primary'>\n        Log in\n      </Link>\n    </header>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,SAAS;IACpB,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC,4HAAA,CAAA,UAAI;gBAAC,MAAK;gBAAI,WAAU;0BAAqB;;;;;;0BAG9C,8OAAC,4HAAA,CAAA,UAAI;gBAAC,MAAK;gBAAe,WAAU;0BAAiB;;;;;;;;;;;;AAK3D"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/providers.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/providers.tsx <module evaluation>\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0DACA"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/providers.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(main)/providers.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sCACA"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/lib/client.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const client = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' },\n})\n\n// client.interceptors.response.use(\n//   (response) => {\n//     console.log('API Response:', response)\n//     return response\n//   },\n//   (error) => {\n//     console.error('API Error:', error)\n//     return Promise.reject(error)\n//   },\n// )\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,OAAO;IACP,iBAAiB;IACjB,SAAS;QAAE,gBAAgB;IAAmB;AAChD,GAEA,oCAAoC;CACpC,oBAAoB;CACpB,6CAA6C;CAC7C,sBAAsB;CACtB,OAAO;CACP,iBAAiB;CACjB,yCAAyC;CACzC,mCAAmC;CACnC,OAAO;CACP,IAAI"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///Users/hasuwini/Documents/Frontend/MONGO-REDDIT/ed-frontend/app/%28main%29/layout.tsx"],"sourcesContent":["import { Header } from 'components/header'\nimport { Providers } from './providers'\nimport { AuthProvider } from 'context/AuthContext'\n\nexport default function MainLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <>\n      <Header />\n      <Providers>\n        <AuthProvider>{children}</AuthProvider>\n      </Providers>\n    </>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE;;0BACE,8OAAC,qHAAA,CAAA,SAAM;;;;;0BACP,8OAAC,6HAAA,CAAA,YAAS;0BACR,cAAA,8OAAC,uHAAA,CAAA,eAAY;8BAAE;;;;;;;;;;;;;AAIvB"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}